language: cpp
os:
    - linux
    - osx
compiler: 
    - gcc
notifications:
    email: false
env:
  matrix:
    - JULIAVERSION="juliareleases"
    - JULIAVERSION="julianightlies"
before_install:
    - if [ `uname` = "Linux" ]; then
        sudo add-apt-repository ppa:staticfloat/julia-deps -y;
        sudo add-apt-repository ppa:staticfloat/${JULIAVERSION} -y;
        sudo apt-get update -qq -y;
        sudo apt-get install libpcre3-dev julia -y;
      elif [ `uname` = "Darwin" ]; then
        if [ "$JULIAVERSION" = "julianightlies" ]; then
          wget -O julia.dmg "http://status.julialang.org/download/osx10.7+";
        else
          wget -O julia.dmg "http://status.julialang.org/stable/osx10.7+";
        fi;
        hdiutil mount julia.dmg;
        cp -Ra /Volumes/Julia/*.app/Contents/Resources/julia ~;
        export PATH="$PATH:$(echo ~)/julia/bin";
      fi
    - git config --global user.name "Travis User"
    - git config --global user.email "travis@example.net"
    - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
script:
    - julia -e 'versioninfo(); Pkg.init(); Pkg.add("DataFrames"); Pkg.add("Blosc"); Pkg.clone(pwd()); Pkg.build("HDF5")'
    - if [ $JULIAVERSION = "julianightlies" ]; then julia --code-coverage test/runtests.jl; fi
    - if [ $JULIAVERSION = "juliareleases" ]; then julia test/runtests.jl; fi
    - if [ $JULIAVERSION = "julianightlies" ]; then julia -e 'Pkg.add("JLDArchives"); cd(Pkg.dir("JLDArchives", "test")); include("runtests.jl")'; fi
after_success:
    - julia -e 'cd(Pkg.dir("HDF5")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
